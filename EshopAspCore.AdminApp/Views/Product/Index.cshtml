@using EshopAspCore.Utilities.Constants
@using EshopAspCore.ViewModels.Common
@using EshopAspCore.ViewModels.Catalog.Products
@model PageResult<ProductViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Scripts{
    <script>
        setTimeout(function () {
            $('#successMsg').fadeOut('slow');
        }, 1000)
    </script>
}
<div class="container-fluid px-4">
    <h2>List products</h2>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/home/index">Home</a></li>
        <li class="breadcrumb-item active">Products</li>
    </ol>
    @if (TempData[SystemConstants.AppSettings.SuccessMessage] != null)
    {
        <div id="successMsg" class="alert alert-success" role="alert">
            @TempData[SystemConstants.AppSettings.SuccessMessage]
        </div>
    }
    <div class="card mb-4">
        <div class="card-header">
            <div class="row">
                <div class="col-md-6 col-sm-12">
                    <p>
                        <a asp-action="Create" class="btn btn-success">Create New</a>
                    </p>
                </div>
                <div class="col-md-6 col-sm-12">
                    <form asp-action="Index" asp-controller="Product" method="get">
                        <div class="row">
                            <div class="col-md-4">
                                <select name="categoryId" asp-items="@ViewBag.categories" class="form-control"
                                        onchange="this.form.submit()">
                                    <option>--Category--</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <input type="text" name="keywords" class="form-control" value="@ViewBag.keywords" />
                            </div>
                            <div class="col-md-4">
                                <button type="submit" class="btn btn-primary">Search</button>
                                <button type="button" class="btn btn-dark" onclick="window.location.href='/product/index'">Reset</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="card-body">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Items[0].Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Items[0].Price)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Items[0].OriginalPrice)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Items[0].Stock)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Items[0].ViewCount)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.Items[0].CategoriesString)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Price)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OriginalPrice)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Stock)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ViewCount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CategoriesString)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>
        @await Component.InvokeAsync("Pager", Model)
    </div>
</div>


